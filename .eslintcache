[{"/Users/drewbradley/mod3/record-shelf/src/App.js":"1","/Users/drewbradley/mod3/record-shelf/src/Record.js":"2","/Users/drewbradley/mod3/record-shelf/src/NavBar.js":"3","/Users/drewbradley/mod3/record-shelf/src/Header.js":"4","/Users/drewbradley/mod3/record-shelf/src/reportWebVitals.js":"5","/Users/drewbradley/mod3/record-shelf/src/index.js":"6"},{"size":2693,"mtime":1612395640843,"results":"7","hashOfConfig":"8"},{"size":492,"mtime":1612394462360,"results":"9","hashOfConfig":"8"},{"size":274,"mtime":1612386870633,"results":"10","hashOfConfig":"8"},{"size":337,"mtime":1612376207239,"results":"11","hashOfConfig":"8"},{"size":362,"mtime":1612322866649,"results":"12","hashOfConfig":"8"},{"size":500,"mtime":1612322866648,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"4z78y1",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/drewbradley/mod3/record-shelf/src/App.js",["27"],"import React from \"react\"\nimport Record from \"./Record\"\nimport './App.css';\nimport Header from \"./Header\"\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      page: 1,\n      url: \"https://api.discogs.com/users/DrewBradley/collection/folders/0/releases?key=XCoBKpyLqjFhJXxBfsqM&secret=ANrZFtLrARjnFXzMRHdQcpEpJPvErVfn\",\n      urlNext: \"\",\n      urlPrev: \"\",\n      error: \"\",\n      recordCollection: [],\n      currentAlbum: \"\",\n      showDeets: false,\n    }\n  }\n\ncomponentDidMount() {\n  this.getRecords(this.state.url)\n}\n\ngetRecords(url) {\n  fetch(url)\n    .then(response => response.json())\n    .then(data => this.setState({\n      recordCollection: data.releases,\n      urlNext: data.pagination.urls.next,\n      urlPrev: data.pagination.urls.prev,\n      error: null}))\n    .catch(error => this.setState({ error: \"No more pages!\" }))\n}\n\ngetNextPage = () => {\n  this.getRecords(this.state.urlNext)\n}\n\ngetPrevPage = () => {\n  this.getRecords(this.state.urlPrev)\n}\n\ngetAlbumDeets = (url, img) => {\n  fetch(url)\n    .then(response => response.json())\n    .then(data => this.displayDeets(data, img))\n}\n\ndisplayDeets = (data, img) => {\n  const tracklist = data.tracklist.map(song => song.title)\n  this.setState({\n    showDeets: true,\n    currentAlbum: {\n      image: img,\n      artist: data.artists[0].name,\n      title: data.title,\n      tracks: tracklist\n    }\n  })\n}\n\nhideDeets = () => {\n  this.setState({\n    showDeets: false\n  })\n}\n\n  render() {\n    const records = this.state.recordCollection.map(record => {\n      return <Record \n      key={record.id} \n      showDeets={this.getAlbumDeets}\n      img={record.basic_information.cover_image}\n      link={record.basic_information.resource_url} \n      artist={record.basic_information.artists[0].name} \n      title={record.basic_information.title}/>\n    })\n    return (\n      <div className=\"App\">\n        <Header nextPage={this.getNextPage} prevPage={this.getPrevPage}/>\n        {!this.state.recordCollection.length && \n        <h1 className=\"loading\">LOADING...</h1>}\n        {this.state.showDeets  && \n        <div className=\"record-prev\"\n        onClick={this.hideDeets}>\n          <h1>{this.state.currentAlbum.artist}</h1>\n          <h1>{this.state.currentAlbum.title}</h1>\n          <img src={this.state.currentAlbum.image} />\n          <div>{this.state.currentAlbum.tracks.map(track => <p>{track}</p>)}</div>\n        </div>}\n        <div className=\"record-grid\">\n          { records }\n        </div>\n        {this.state.error &&\n        <h1 \n          onClick={this.getRecords(this.state.url)} className=\"error\">{this.state.error}</h1>\n        }\n      </div>\n    )      \n    }\n  \n}\n\nexport default App;\n","/Users/drewbradley/mod3/record-shelf/src/Record.js",[],"/Users/drewbradley/mod3/record-shelf/src/NavBar.js",[],"/Users/drewbradley/mod3/record-shelf/src/Header.js",[],"/Users/drewbradley/mod3/record-shelf/src/reportWebVitals.js",[],"/Users/drewbradley/mod3/record-shelf/src/index.js",[],{"ruleId":"28","severity":1,"message":"29","line":89,"column":11,"nodeType":"30","endLine":89,"endColumn":54},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]