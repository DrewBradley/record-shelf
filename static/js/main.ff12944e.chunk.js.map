{"version":3,"sources":["Record.js","NavBar.js","Header.js","App.js","reportWebVitals.js","index.js"],"names":["Record","props","onClick","showDeets","link","img","className","style","backgroundImage","backgroundRepeat","backgroundSize","title","artist","NavBar","nextPage","prevPage","Header","App","getNextPage","getRecords","state","urlNext","getPrevPage","urlPrev","getAlbumDeets","url","fetch","then","response","json","data","displayDeets","tracklist","map","song","setState","currentAlbum","image","artists","name","tracks","hideDeets","page","error","recordCollection","this","releases","pagination","urls","next","prev","catch","records","record","basic_information","cover_image","resource_url","id","length","src","track","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff12944e.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Record = (props) => {\n  return(\n    <div onClick={() => props.showDeets(props.link, props.img)} className=\"record\">\n     <div className=\"background\" \n      style={{\n        backgroundImage: `url(\"${props.img}\")`,\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover'\n      }}>\n      <div className=\"album-info\">\n        <h1>{props.title}</h1>\n        <h2>by {props.artist}</h2>\n      </div>\n     </div>\n    </div>\n  )\n}\n\nexport default Record","import React from \"react\"\n\nconst NavBar = ({nextPage, prevPage}) => {\n  return(\n    <div className=\"navbar\">\n      <button onClick={() => prevPage()} >Previous Page</button>\n      <button onClick={() => nextPage()} >Next Page</button>\n    </div>\n  )\n}\n\nexport default NavBar","import React from \"react\"\nimport NavBar from \"./NavBar\"\nimport \"./Header.css\"\n\nconst Header = ({nextPage, prevPage}) => {\n  return (\n    <section className=\"header-section\">\n      <header className=\"header-title\">My Record Shelf</header>\n      <NavBar nextPage={nextPage} prevPage={prevPage}/>\n    </section>\n  )\n}\n\nexport default Header","import React from \"react\"\nimport Record from \"./Record\"\nimport './App.css';\nimport Header from \"./Header\"\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      page: 1,\n      url: \"https://api.discogs.com/users/DrewBradley/collection/folders/0/releases?key=XCoBKpyLqjFhJXxBfsqM&secret=ANrZFtLrARjnFXzMRHdQcpEpJPvErVfn\",\n      urlNext: \"\",\n      urlPrev: \"\",\n      error: \"\",\n      recordCollection: [],\n      currentAlbum: \"\",\n      showDeets: false,\n    }\n  }\n\ncomponentDidMount() {\n  this.getRecords(this.state.url)\n}\n\ngetRecords(url) {\n  fetch(url)\n    .then(response => response.json())\n    .then(data => this.setState({\n      recordCollection: data.releases,\n      urlNext: data.pagination.urls.next,\n      urlPrev: data.pagination.urls.prev,\n      error: null}))\n    .catch(error => this.setState({ error: \"No more pages!\" }))\n}\n\ngetNextPage = () => {\n  this.getRecords(this.state.urlNext)\n}\n\ngetPrevPage = () => {\n  this.getRecords(this.state.urlPrev)\n}\n\ngetAlbumDeets = (url, img) => {\n  fetch(url)\n    .then(response => response.json())\n    .then(data => this.displayDeets(data, img))\n}\n\ndisplayDeets = (data, img) => {\n  const tracklist = data.tracklist.map(song => song.title)\n  this.setState({\n    showDeets: true,\n    currentAlbum: {\n      image: img,\n      artist: data.artists[0].name,\n      title: data.title,\n      tracks: tracklist\n    }\n  })\n}\n\nhideDeets = () => {\n  this.setState({\n    showDeets: false\n  })\n}\n\n  render() {\n    const records = this.state.recordCollection.map(record => {\n      return <Record \n      key={record.id} \n      showDeets={this.getAlbumDeets}\n      img={record.basic_information.cover_image}\n      link={record.basic_information.resource_url} \n      artist={record.basic_information.artists[0].name} \n      title={record.basic_information.title}/>\n    })\n    return (\n      <div className=\"App\">\n        <Header nextPage={this.getNextPage} prevPage={this.getPrevPage}/>\n        {!this.state.recordCollection.length && \n        <h1 className=\"loading\">LOADING...</h1>}\n        {this.state.showDeets  && \n        <div className=\"record-prev\"\n        onClick={this.hideDeets}>\n          <h1>{this.state.currentAlbum.artist}</h1>\n          <h1>{this.state.currentAlbum.title}</h1>\n          <img src={this.state.currentAlbum.image} />\n          <div>{this.state.currentAlbum.tracks.map(track => <p>{track}</p>)}</div>\n        </div>}\n        <div className=\"record-grid\">\n          { records }\n        </div>\n        {this.state.error &&\n        <h1 \n          onClick={this.getRecords(this.state.url)} className=\"error\">{this.state.error}</h1>\n        }\n      </div>\n    )      \n    }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}